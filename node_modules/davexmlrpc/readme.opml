<?xml version="1.0" encoding="ISO-8859-1"?>
<opml version="2.0">
	<head>
		<title>readme.md</title>
		<dateModified>&lt;%dateModified%></dateModified>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body text="readme.md">
		<outline text="# What is XML-RPC? ">
			<outline text="It's a &lt;a href=&quot;http://xmlrpc.com/spec.md&quot;&gt;spec&lt;/a&gt; and a set of implementations that allow software running on disparate operating systems, running in different environments to make procedure calls over the Internet."></outline>
			<outline text="It's remote procedure calling using HTTP as the transport and XML as the encoding. XML-RPC is designed to be as simple as possible, while allowing complex data structures to be transmitted, processed and returned."></outline>
			</outline>
		<outline text="### JavaScript implementation">
			<outline text="Starting in 2019, there's a new implementation of XML-RPC in JavaScript.">
				<outline text="* Client and server &lt;a href=&quot;https://www.npmjs.com/package/davexmlrpc&quot;&gt;for Node.js&lt;/a&gt;."></outline>
				<outline text="* Client for the &lt;a href=&quot;https://github.com/scripting/xml-rpc/tree/master/client&quot;&gt;browser&lt;/a&gt;."></outline>
				<outline text="* Pure JavaScript."></outline>
				<outline text="* Supports XML and JSON encoding."></outline>
				<outline text="* New debugger and validation suite. "></outline>
				<outline text="* Example code."></outline>
				<outline text="* Written by one of the &lt;a href=&quot;http://scripting.com/?tab=about&quot;&gt;designers&lt;/a&gt; of the protocol."></outline>
				</outline>
			</outline>
		<outline text="### Example client">
			<outline text="Here's code that makes a simple XML-RPC call in a Node.js app.">
				<outline text="&lt;pre&gt;[[http://scripting.com/code/xmlrpc/examples/nodeclient/client.js]]&lt;/pre&gt;"></outline>
				</outline>
			<outline text="It sends a call to the demo server, betty.userland.com. "></outline>
			<outline text="The procedure it calls is &quot;examples.getStateName,&quot; with a single parameter, the number 5."></outline>
			<outline text="The call will be made in XML (it could also use JSON if we know the server supports it). "></outline>
			<outline text="When the server returns, the callback receives the standard Node error object in the first param, and if there was no error, the data returned through XML-RPC in the second parameter."></outline>
			</outline>
		<outline text="### Example server">
			<outline text="Here's the code for a simple XML-RPC server. "></outline>
			<outline text="&lt;pre&gt;[[http://scripting.com/code/xmlrpc/examples/simple/simple.js]]&lt;/pre&gt;"></outline>
			<outline text="Here's pseudo-code that calls this service. It returns THIS IS A TEST.">
				<outline text="&lt;pre&gt;[&quot;xmlrpc://localhost:1417/rpc2&quot;].uppercase (&quot;this is a test&quot;)&lt;/pre&gt;"></outline>
				</outline>
			</outline>
		<outline text="### Simple XML-RPC debugger">
			<outline text="I've put up a &lt;a href=&quot;http://scripting.com/code/xmlrpcdebugger/&quot;&gt;simple app&lt;/a&gt; that lets you try calling an XML-RPC procedure from an HTML form, where you supply the URL of the endpoint, the verb you want to call, and its parameters as a JavaScript expression. "></outline>
			<outline text="It then displays the result in JSON in a box below. "></outline>
			<outline text="If there's an error message it's displayed in red."></outline>
			<outline text="You can try calling these routines on betty.scripting.com (it's the default endpoint):">
				<outline text="1. examples.getStateName, params = 31"></outline>
				<outline text="2. examples.getStateNames, params = [12, 22, 32, 42]"></outline>
				<outline text="3. examples.getStateList, params = [\[12, 22, 32, 42]\] "></outline>
				<outline text="4. examples.getStateStruct, params = [{state1: 3, state2: 42}] "></outline>
				<outline text="5. examples.getStateName, params = 900 (error)"></outline>
				<outline text="5. noSuchName (error)"></outline>
				</outline>
			<outline text="If you open the JavaScript console, you'll see the actual XML-RPC cals, in XML, as they go over the wire. &lt;a href=&quot;http://scripting.com/images/2018/05/30/xmlRpcOverTheWire.png&quot;&gt;Screen shot&lt;/a&gt;."></outline>
			</outline>
		<outline text="### How params work in the xmlRpcClient">
			<outline text="The third param to the xmlRpcClient function is either a value or a list of values."></outline>
			<outline text="If it's a value, the XML-RPC procedure is called with a single parameter."></outline>
			<outline text="If it's a list with N elements, the procedure is called with N params. "></outline>
			<outline text="If you want to call a procedure with a single param that's a list, send a list with a single element that's the list. It's the one weird case for this calling convention, and is illustrated with the third call, above."></outline>
			</outline>
		<outline text="### Using JSON in place of XML">
			<outline text="The XML-RPC standard specifies using XML, of course, but in this implementation, as an experiment, you can also use JSON."></outline>
			<outline text="When processing a request, we look at the first non-whitespace character. If it's a left curly brace, we treat it as JSON, not XML."></outline>
			<outline text="I haven't written a spec for the JSONified version, but I have created a &lt;a href=&quot;http://scripting.com/misc/xmlrpc-in-json.html&quot;&gt;cribsheet&lt;/a&gt; with examples that I used to guide the implementation. "></outline>
			<outline text="Two types, &amp;lt;base64&gt; and &amp;lt;dateTime.iso8601&gt; are represented as strings. There is no way for the toolkit to know they are binary data or dates. This means that the XML and JSON versions are not exactly the same. Not sure what the implications of this will be. I wrote up the issue &lt;a href=&quot;http://scripting.com/2018/06/10/152333.html&quot;&gt;on Scripting News&lt;/a&gt;."></outline>
			</outline>
		<outline text="### Please help test for interop">
			<outline text="If you're running XML-RPC in your world, could you try testing against the server "></outline>
			<outline text="I have running at betty.scripting.com. The server is accessible through port 80. The calls it handles are exactly the ones handled by the userland version of the test server. Demo &lt;a href=&quot;https://github.com/scripting/xml-rpc/blob/master/client/code.js&quot;&gt;code&lt;/a&gt; that calls the actual server is provided, in JavaScript."></outline>
			<outline text="The goal is to replace betty.userland.com with the one running here. But only after enough testing to be confident that it makes a good reference server. "></outline>
			<outline text="If you have success, or find problems, please post a note in the &lt;a href=&quot;https://github.com/scripting/xml-rpc/issues&quot;&gt;issues section&lt;/a&gt; here. Thanks!"></outline>
			</outline>
		<outline text="### How to participate">
			<outline text="I started a page at &lt;a href=&quot;http://reboot.xmlrpc.com/&quot;&gt;reboot.xmlrpc.com&lt;/a&gt; with links to new stuff related to this work. "></outline>
			<outline text="Read Eric Kidd's fantastic &lt;a href=&quot;http://xmlrpc-c.sourceforge.net/xmlrpc-howto/xmlrpc-howto.html&quot;&gt;XML-RPC HowTo&lt;/a&gt;."></outline>
			<outline text="Test your implementation on the XML-RPC Validator page."></outline>
			</outline>
		<outline text="### The original site">
			<outline text="The original site, dating back to 1998, is &lt;a href=&quot;http://1998.xmlrpc.com/&quot;&gt;preserved&lt;/a&gt;. "></outline>
			</outline>
		<outline text="### Lest anyone forget ">
			<outline text="The first implementation of XML-RPC was in &lt;a href=&quot;http://frontier.userland.com/stories/storyReader$101&quot;&gt;Frontier&lt;/a&gt;, in April 1998. "></outline>
			</outline>
		<outline text="### Questions, comments?">
			<outline text="Post an &lt;a href=&quot;https://github.com/scripting/xml-rpc/issues&quot;&gt;issue&lt;/a&gt; here. "></outline>
			</outline>
		</body>
	</opml>
